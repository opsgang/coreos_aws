#!/bin/bash
# vim: et sr sw=4 ts=4 smartindent syntax=sh:
#
# instance_info
#
# Gets IMMUTABLE instance info from AWS metadata and writes out
# as key=val pairs for consumption by scripts or docker --env_file
#
# i.e. we're not interested in those metadata or tag values
# that are subject to change during the lifestyle of the instance.
#
if ! . /home/core/bin/common.inc >/dev/null 2>&1
then
    echo "$0 ERROR: couldn't source custom shell functions [/home/core/bin/common.inc]"
    exit 1
fi
INFO_FILE=/etc/custom/instance_info
TIMESTAMP="$(date +'%Y-%m-%d %H:%M:%S')"
AWS_DOC_URI=http://169.254.169.254/latest/dynamic/instance-identity/document

i "waiting until metadata service is up ..."

if ! curl -v --retry 5 --retry-delay 10 --retry-max-time 60 --connect-timeout 3 $AWS_DOC_URI
then
    e "got bored waiting for aws metadata. <sulk>Got better things to do.</sulk>"
    exit 1
fi

AWS_DOC=$(curl -s $AWS_DOC_URI)
if [[ -z "$AWS_DOC" ]]; then
    e "couldn't fetch $AWS_DOC_URI with curl"
    exit 1
fi

AWS_INSTANCE_ID=$(echo "$AWS_DOC" | grep '^[ ]\+"instanceId"'   | awk -F\" '{print $4}')
AWS_DEFAULT_REGION=$(echo "$AWS_DOC" | grep '^[ ]\+"region"'       | awk -F\" '{print $4}')

# ... aws tag names can contain chars that are not valid bash var names
# so they need some care, attention and unforgiving mangling before adding
# to $INFO_FILE
AWS_TAGS=$(                                                   \
    aws --region $AWS_DEFAULT_REGION ec2 describe-tags        \
        --filters "Name=resource-type,Values=instance"        \
                  "Name=resource-id,Values=$AWS_INSTANCE_ID"  \
        --query "Tags[*].{Value:Value,Key:Key}" --output=text \
    | sed -e 's/^\([^ \t]\+\)[ \t]\+\([^ \t]\+\)/\U\1\E=\2/'  \
          -e 's/^\(NAME=\)/AWS_\1/'                           \
)

# ... make tag name a valid var name e.g. [A-Za-z0-9_]+
MASSAGED_TAGS=
for tag_val in $(echo "$AWS_TAGS"); do
    tag=$(echo "$tag_val" | sed -e 's/^\([^=]\+\)=.*/\1/' -e 's/ //g' -e 's/[^A-Z0-9_]/_/g' )
    val=$(echo "$tag_val" | sed -e 's/^[^=]\+=\(.*\)$/\1/' )
    MASSAGED_TAGS=$(echo -e "$tag=$val\n$MASSAGED_TAGS")
done
SORTED_TAGS=$(echo "$MASSAGED_TAGS" | sort)

cat << EOF >$INFO_FILE
# [$TIMESTAMP] AWS INSTANCE INFO GENERATED BY $0
AWS_ACCOUNT_ID=$(                                                            \
    curl -s http://169.254.169.254/latest/dynamic/instance-identity/document \
    | jq -r '. | .accountId'                                                 \
)
AWS_INSTANCE_ID=$AWS_INSTANCE_ID
AWS_INSTANCE_TYPE=$(echo "$AWS_DOC" | grep '^[ ]\+"instanceType"' | awk -F\" '{print $4}')
AWS_DEFAULT_REGION=$AWS_DEFAULT_REGION
AWS_AZ=$( echo "$AWS_DOC" | grep '^[ ]\+"availabilityZone"' | awk -F\" '{print $4}' | sed -e 's/.*\(.\)$/\1/')
# ... AWS TAG VALUES (tag name, uppercased)
$SORTED_TAGS
# END AWS INSTANCE INFO GENERATED BY $0
EOF

cat $INFO_FILE

